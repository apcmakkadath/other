Create a session
$session = New-Object Microsoft.PowerShell.Commands.WebRequestSession

# First request (e.g., to get a session cookie)
$response = Invoke-WebRequest -Uri "https://example.com/login" -WebSession $session -Method POST -Body @{
    username = "user"
    password = "password"
}

# Use the same session for subsequent requests
$response2 = Invoke-WebRequest -Uri "https://example.com/protected" -WebSession $session
---------- using http client --------
# Create a cookie container and an HTTP client
$cookieContainer = New-Object System.Net.CookieContainer
$handler = New-Object System.Net.Http.HttpClientHandler
$handler.CookieContainer = $cookieContainer
$httpClient = [System.Net.Http.HttpClient]::new($handler)

# First request to set the cookie
$requestUri = "https://example.com/login"
$content = New-Object System.Net.Http.FormUrlEncodedContent @{
    username = "user"
    password = "password"
}
$response = $httpClient.PostAsync($requestUri, $content).Result

# Second request using the same cookie container
$response2 = $httpClient.GetAsync("https://example.com/protected").Result
$result = $response2.Content.ReadAsStringAsync().Result

Write-Output $result
----- double encode ------
# Function to double-encode a string
function DoubleEncode-String {
    param (
        [Parameter(Mandatory)]
        [string]$InputString
    )
    # Perform the first encoding
    $encodedOnce = [System.Web.HttpUtility]::UrlEncode($InputString)
    # Perform the second encoding
    $encodedTwice = [System.Web.HttpUtility]::UrlEncode($encodedOnce)
    return $encodedTwice
}

# Example usage
$originalString = "Hello World!"
$doubleEncodedString = DoubleEncode-String -InputString $originalString
Write-Host "Original String: $originalString"
Write-Host "Double Encoded String: $doubleEncodedString"
